n.sweden = 1852
ate.moldova = ((0.031/4) + (-.503/4))/2
se.moldova = ((.165/4 + .166/4))/2
n.moldova = 459
################################################################################
# De Figuerido working paper survey experiment
################################################################################
ate.defig = .01
se.defig = (.07 - .01)/1.96 # estimate standard error from confidence interval
n.defig = 200
################################################################################
# Mares and Visconti 2019
################################################################################
ate.mv.inv = -.18
ate.mv.conv = -.33
ate.mv.avg = (ate.mv.inv + ate.mv.conv)/2
se.mv.inv = .016
se.mv.conv = .017
se.mv.avg = (se.mv.inv + se.mv.conv)/2
n.mv = 503
################################################################################
# Breitenstein (No replication data?)
################################################################################
# Average treatment effects of judge and partisan accusations
ate.b.judge = -.266
ate.b.party = -.222
ate.b.avg = (ate.b.judge + ate.b.party)/2
se.b.party = 0.00769
se.b.judge = 0.00793
se.b.avg = (se.b.party + se.b.judge)/2
n.b = 2275
################################################################################
# Franchino and Zucchini 2014
################################################################################
# Remove NA outcome values - not sure why these are here
fz = fz %>% filter(!is.na(Y))
# Pool corruption into one treatment
fz$corrupt = with(fz, ifelse(corruption == "Convicted of corruption" |
corruption == "Investigated for corruption", 1, 0))
# Run model
fz_corrupt = lm(Y ~ corrupt, data = fz)
summary(fz_corrupt, cluster = "IDContatto")
# Extract point estimates
ate.fz = summary(fz_corrupt, cluster = IDContatto)$coef[2, 1]
# Extract standard errors
se.fz = summary(fz_corrupt, cluster = IDContatto)$coef[2, 2]
# Extract number of observations
n.fz = 347
################################################################################
# Eggers, Vivyan, and Wagner 2017
################################################################################
eggers = readRDS("data/experiment_data_eggers.Rds", refhook = NULL)
# Run model
evw_corrupt <- lm(voteinc ~ mp.misconduct, data = eggers)
summary(evw_corrupt, cluster = "id")
# Extract point estimates
ate.evw = summary(evw_corrupt, cluster = id)$coef[2, 1]
# Extract standard errors
se.evw = summary(evw_corrupt, cluster = id)$coef[2, 2]
# Extract number of observations
n.evw = 1962
################################################################################
# Add to meta analysis dataframe
################################################################################
# Winters/Weitz-Shapiro 2017
wsw17 = data.frame(type="Survey", year=2016 , author = "Winters & Weitz-Shapiro",
author_reduced = "Winters & Weitz-Shapiro 2017", country = "Brazil",
ate_vote = ate.wsw17, se_vote = se.wsw17, ci_upper = NA,
ci_lower = NA, N = n.wsw17, published = 1, Notes = NA)
# Winters/Weitz-Shapiro 2013
wsw13 = data.frame(type="Survey", year=2013 , author = "Winters & Weitz-Shapiro",
author_reduced = "Winters & Weitz-Shapiro 2013", country = "Brazil",
ate_vote = ate.wsw13, se_vote = se.wsw13, ci_upper = NA,
ci_lower = NA,N = n.wsw13, published = 1, Notes = NA)
# Winters/Weitz-Shapiro 2015
wsw15 = data.frame(type="Survey", year=2015 , author = "Winters & Weitz-Shapiro",
author_reduced = "Winters & Weitz-Shapiro 2015", country = "Brazil",
ate_vote = ate.wsw15, se_vote = se.wsw15, ci_upper = NA,
ci_lower = NA,N = n.wsw15, published = 1, Notes = NA)
# Winters/Weitz-Shapiro 2018
wsw18 = data.frame(type="Survey", year=2018 , author = "Winters & Weitz-Shapiro",
author_reduced = "Winters & Weitz-Shapiro 2018", country = "Argentina",
ate_vote = ate.wsw18, se_vote = se.wsw18, ci_upper = NA,
ci_lower = NA,N = n.wsw18, published = 1, Notes = NA)
# Klasna and Tucker Sweden
kt_sweden = data.frame(type="Survey", year=2013 , author = "Klasna & Tucker",
author_reduced = "Klasna & Tucker (Sweden)", country = "Sweden",
ate_vote = ate.sweden, se_vote = se.wsw13, ci_upper = NA,
ci_lower = NA, N = n.sweden, published = 1, Notes = NA)
# Klasna and Tucker Moldova
kt_moldova = data.frame(type="Survey", year=2013 , author = "Klasna & Tucker",
author_reduced = "Klasna & Tucker (Moldova)", country = "Moldova",
ate_vote = ate.moldova, se_vote = se.moldova, ci_upper = NA,
ci_lower = NA, published = 1, N = n.moldova, Notes = NA)
# De Figuerido et al. Brazil 2011
# defig = data.frame(type="Survey", year=2011 , author = "De Figueiredo, Hidalgo, & Kasahara",
#                    author_reduced = "De Figueiredo et al.", country = "Brazil",
#                    ate_vote = ate.defig, se_vote = se.defig, ci_upper = NA,
#                    ci_lower = NA, published = 0, N = n.defig, Notes = NA)
# Mares and Visconti 2019
mv = data.frame(type="Survey", year=2019 , author = "Mares & Visconti",
author_reduced = "Mares & Visconti", country = "Romania",
ate_vote = ate.mv.avg, se_vote = se.mv.avg, ci_upper = NA,
ci_lower = NA, N = n.mv, published = 1, Notes = NA)
# Breitenstein 2019
b = data.frame(type="Survey", year=2019 , author = "Breitenstein",
author_reduced = "Breitenstein", country = "Spain",
ate_vote = ate.b.avg, se_vote = se.b.avg, ci_upper = NA,
ci_lower = NA, N = n.b, published = 1, Notes = NA)
# Franchino and Zucchini 2014
fz = data.frame(type="Survey", year=2014 , author = "Franchino and Zucchini",
author_reduced = "Franchino and Zucchini", country = "Italy",
ate_vote = ate.fz, se_vote = se.fz, ci_upper = NA,
ci_lower = NA, N = n.fz, published = 1, Notes = NA)
# Eggers, Vivyan, and Wagner 2017
evw = data.frame(type="Survey", year=2017 , author = "Eggers, Vivyan, and Wagner",
author_reduced = "Eggers et al.", country = "UK",
ate_vote = ate.evw, se_vote = se.evw, ci_upper = NA,
ci_lower = NA, N = n.evw, published = 1, Notes = NA)
# Combine dataframes
meta = rbind(results, wsw17, wsw13, wsw15, wsw18, kt_sweden, kt_moldova,
mv, b, fz, evw)
#            defig, wsw13comp, wsw13nocomp, wsw13noinfo)
# Save combined dataframe
save(meta, file = "data/meta.RData")
View(meta)
################################################################################
# Libraries and Import
################################################################################
library(survey)
library(huxtable)
library(foreign)
library(readxl)
library(readstata13)
library(cjoint)
# Data imports
results = read_excel("data/study_results.xlsx")
wsw17 = read.dta('data/Weitz-ShapiroWinters_JOP_Credibility_ReplicationData.dta')
wsw13 = read.dta('data/WintersWeitzShapiro_2013_Replication.dta')
wsw16 = read.dta('data/WintersWeitz-Shapiro_PRQ_Specificity_ReplicationData.dta')
wsw18 = read.dta13('data/WintersWeitz-Shapiro_PSRM_Argentina_ReplicationData.dta')
fz = read.dta('data/franchino_zucchini.dta')
# Define scaling function
scale01 <- function(x)
(x - min(x, na.rm = T)) / diff(range(x, na.rm = T))
################################################################################
# Winters/Weitz-Shapiro JOP
################################################################################
# Rescale outcome variable
wsw17$vote_vig_cont <- scale01(wsw17$voteintent)
# Create all variable
wsw17$corrupt = with(wsw17, ifelse(vinheta != "VINHETA 1" & vinheta != "VINHETA 2",
1, 0))
# Create vote dummy
wsw17$vote = with(wsw17, ifelse(voteintent > 2, 1, 0))
# Run models
reg.wsw17.all = lm(vote ~ corrupt, data = wsw17)
# Extract point estimates
ate.wsw17 = summary(reg.wsw17.all)$coef[2, 1]
# Extract standard errors
se.wsw17 = summary(reg.wsw17.all)$coef[2, 2]
# Extract number of observations
n.wsw17 = nobs(reg.wsw17.all)
################################################################################
# Winters/Weitz-Shapiro CP
################################################################################
# Rescale outcome variable
wsw13$vote_vig_cont <- scale01(wsw13$votescale)
# All corrupt vignettes
wsw13$vote_vig_cont <- ifelse(wsw13$votescale > 2, 1, 0)
reg.wsw13 = lm(vote_vig_cont ~ corruptvignette, data = wsw13)
# Extract point estimates
ate.wsw13 <- summary(reg.wsw13)$coef[2, 1]
# Extract standard errors
se.wsw13 = summary(reg.wsw13)$coef[2, 2]
# Extract number of observations
n.wsw13 = nobs(reg.wsw13)
################################################################################
# Winters/Weitz-Shapiro 2015
################################################################################
ate.wsw15 = -1.53/3
t_val = qt(0.01/2, df = 1974) # Calculating the t-value using quantile function
se.wsw15 = abs(ate.wsw15)/abs(t_val) # Calculating standard error
n.wsw15 = 1974
################################################################################
# Winters/Weitz-Shapiro PRQ
################################################################################
# Rescale outcome variable
wsw16$vote_vig_cont <- scale01(wsw17$voteintent)
# Create all variable
wsw16$corrupt = with(wsw16, ifelse(vinheta != "VINHETA 1" & vinheta != "VINHETA 2",
1, 0))
# Create vote dummy
wsw16$vote = with(wsw16, ifelse(voteintent > 2, 1, 0))
# Run models
reg.wsw16.all = lm(vote ~ corrupt, data = wsw16) # Same experiment
################################################################################
# Winters/Weitz-Shapiro PSRM
################################################################################
# Create all variable
wsw18$corrupt = with(wsw18, ifelse(vignette <= 3 | vignette >= 10, 0, 1))
# Create vote dummy
wsw18$vote = with(wsw18, ifelse(voteintent > 2, 1, 0))
# Run model
reg.wsw18 = lm(vote ~ corrupt, data = wsw18) # Same experiment
# Extract point estimates
ate.wsw18 = summary(reg.wsw18)$coef[2, 1]
# Extract standard errors
se.wsw18 = summary(reg.wsw18)$coef[2, 2]
# Extract number of observations
n.wsw18 = nobs(reg.wsw18)
################################################################################
# Klasnja & Tucker
################################################################################
ate.sweden = ((-0.768/4 + -.814/4))/2
se.sweden = ((.090/4 + .097/4))/2
n.sweden = 1852
ate.moldova = ((0.031/4) + (-.503/4))/2
se.moldova = ((.165/4 + .166/4))/2
n.moldova = 459
################################################################################
# De Figuerido working paper survey experiment
################################################################################
ate.defig = .01
se.defig = (.07 - .01)/1.96 # estimate standard error from confidence interval
n.defig = 200
################################################################################
# Mares and Visconti 2019
################################################################################
ate.mv.inv = -.18
ate.mv.conv = -.33
ate.mv.avg = (ate.mv.inv + ate.mv.conv)/2
se.mv.inv = .016
se.mv.conv = .017
se.mv.avg = (se.mv.inv + se.mv.conv)/2
n.mv = 503
################################################################################
# Breitenstein (No replication data?)
################################################################################
# Average treatment effects of judge and partisan accusations
ate.b.judge = -.266
ate.b.party = -.222
ate.b.avg = (ate.b.judge + ate.b.party)/2
se.b.party = 0.00769
se.b.judge = 0.00793
se.b.avg = (se.b.party + se.b.judge)/2
n.b = 2275
################################################################################
# Franchino and Zucchini 2014
################################################################################
# Remove NA outcome values - not sure why these are here
fz = fz %>% filter(!is.na(Y))
# Pool corruption into one treatment
fz$corrupt = with(fz, ifelse(corruption == "Convicted of corruption" |
corruption == "Investigated for corruption", 1, 0))
# Run model
fz_corrupt = lm(Y ~ corrupt, data = fz)
summary(fz_corrupt, cluster = "IDContatto")
# Extract point estimates
ate.fz = summary(fz_corrupt, cluster = IDContatto)$coef[2, 1]
# Extract standard errors
se.fz = summary(fz_corrupt, cluster = IDContatto)$coef[2, 2]
# Extract number of observations
n.fz = 347
################################################################################
# Eggers, Vivyan, and Wagner 2017
################################################################################
eggers = readRDS("data/experiment_data_eggers.Rds", refhook = NULL)
# Run model
evw_corrupt <- lm(voteinc ~ mp.misconduct, data = eggers)
summary(evw_corrupt, cluster = "id")
# Extract point estimates
ate.evw = summary(evw_corrupt, cluster = id)$coef[2, 1]
# Extract standard errors
se.evw = summary(evw_corrupt, cluster = id)$coef[2, 2]
# Extract number of observations
n.evw = 1962
################################################################################
# Add to meta analysis dataframe
################################################################################
# Winters/Weitz-Shapiro 2017
wsw17 = data.frame(type="Survey", year=2016 , author = "Winters & Weitz-Shapiro",
author_reduced = "Winters & Weitz-Shapiro 2017", country = "Brazil",
ate_vote = ate.wsw17, se_vote = se.wsw17, ci_upper = NA,
ci_lower = NA, N = n.wsw17, published = 1, Notes = NA)
# Winters/Weitz-Shapiro 2013
wsw13 = data.frame(type="Survey", year=2013 , author = "Winters & Weitz-Shapiro",
author_reduced = "Winters & Weitz-Shapiro 2013", country = "Brazil",
ate_vote = ate.wsw13, se_vote = se.wsw13, ci_upper = NA,
ci_lower = NA,N = n.wsw13, published = 1, Notes = NA)
# Winters/Weitz-Shapiro 2015
wsw15 = data.frame(type="Survey", year=2015 , author = "Winters & Weitz-Shapiro",
author_reduced = "Winters & Weitz-Shapiro 2015", country = "Brazil",
ate_vote = ate.wsw15, se_vote = se.wsw15, ci_upper = NA,
ci_lower = NA,N = n.wsw15, published = 1, Notes = NA)
# Winters/Weitz-Shapiro 2018
wsw18 = data.frame(type="Survey", year=2018 , author = "Winters & Weitz-Shapiro",
author_reduced = "Winters & Weitz-Shapiro 2018", country = "Argentina",
ate_vote = ate.wsw18, se_vote = se.wsw18, ci_upper = NA,
ci_lower = NA,N = n.wsw18, published = 1, Notes = NA)
# Klasna and Tucker Sweden
kt_sweden = data.frame(type="Survey", year=2013 , author = "Klasna & Tucker",
author_reduced = "Klasna & Tucker (Sweden)", country = "Sweden",
ate_vote = ate.sweden, se_vote = se.wsw13, ci_upper = NA,
ci_lower = NA, N = n.sweden, published = 1, Notes = NA)
# Klasna and Tucker Moldova
kt_moldova = data.frame(type="Survey", year=2013 , author = "Klasna & Tucker",
author_reduced = "Klasna & Tucker (Moldova)", country = "Moldova",
ate_vote = ate.moldova, se_vote = se.moldova, ci_upper = NA,
ci_lower = NA, published = 1, N = n.moldova, Notes = NA)
# De Figuerido et al. Brazil 2011
# defig = data.frame(type="Survey", year=2011 , author = "De Figueiredo, Hidalgo, & Kasahara",
#                    author_reduced = "De Figueiredo et al.", country = "Brazil",
#                    ate_vote = ate.defig, se_vote = se.defig, ci_upper = NA,
#                    ci_lower = NA, published = 0, N = n.defig, Notes = NA)
# Mares and Visconti 2019
mv = data.frame(type="Survey", year=2019 , author = "Mares & Visconti",
author_reduced = "Mares & Visconti", country = "Romania",
ate_vote = ate.mv.avg, se_vote = se.mv.avg, ci_upper = NA,
ci_lower = NA, N = n.mv, published = 1, Notes = NA)
# Breitenstein 2019
b = data.frame(type="Survey", year=2019 , author = "Breitenstein",
author_reduced = "Breitenstein", country = "Spain",
ate_vote = ate.b.avg, se_vote = se.b.avg, ci_upper = NA,
ci_lower = NA, N = n.b, published = 1, Notes = NA)
# Franchino and Zucchini 2014
fz = data.frame(type="Survey", year=2014 , author = "Franchino and Zucchini",
author_reduced = "Franchino and Zucchini", country = "Italy",
ate_vote = ate.fz, se_vote = se.fz, ci_upper = NA,
ci_lower = NA, N = n.fz, published = 1, Notes = NA)
# Eggers, Vivyan, and Wagner 2017
evw = data.frame(type="Survey", year=2017 , author = "Eggers, Vivyan, and Wagner",
author_reduced = "Eggers et al.", country = "UK",
ate_vote = ate.evw, se_vote = se.evw, ci_upper = NA,
ci_lower = NA, N = n.evw, published = 1, Notes = NA)
# Combine dataframes
meta = rbind(results, wsw17, wsw13, wsw15, wsw18, kt_sweden, kt_moldova,
mv, b, fz, evw)
#            defig, wsw13comp, wsw13nocomp, wsw13noinfo)
# Save combined dataframe
save(meta, file = "data/meta.RData")
################################################################################
# Libraries and Import
################################################################################
rm(list=ls())
# Libraries
library(tidyverse)
library(readxl)
library(metafor)
# Data import - Gallup
meta = read_excel("data/study_results.xlsx")
load(file="data/meta.RData")
################################################################################
# Calculate meta-analytic results
################################################################################
# Calculate confidence intervals for studies with SEs only
meta$ci_lower = with(meta, ifelse(is.na(ci_lower), ate_vote - 1.96*se_vote, ci_lower))
meta$ci_upper = with(meta, ifelse(is.na(ci_upper), ate_vote - 1.96*se_vote, ci_upper))
# Keep field experiments only
field = meta %>%
filter(type == "Field" | type == "Natural") %>%
arrange(ate_vote) %>%
mutate(author_reduced = reorder(author_reduced, -ate_vote))
# Remove Banarjee papers
#field = field %>% filter(author_reduced != "Banerjee et al. (2011)" &
#                         author_reduced != "Banerjee et al. (2010)")
# Keep survey experiments only
survey = meta %>%
filter(type == "Survey") %>%
arrange(ate_vote) %>%
mutate(author_reduced = reorder(author_reduced, -ate_vote))
# Random effects model
re_field = rma.uni(yi = ate_vote, sei = se_vote, data = field)
re_survey = rma.uni(yi = ate_vote, sei = se_vote, data = survey)
# Fixed effects model: unweighted
fe_field = rma.uni(yi = ate_vote, sei = se_vote, weighted = "FALSE",
method = "FE", data = field)
fe_survey = rma.uni(yi = ate_vote, sei = se_vote, weighted = "FALSE",
method = "FE", data = survey)
# Fixed effects model: weighted
fe_field = rma.uni(yi = ate_vote, sei = se_vote, weights = N,
method = "FE", data = field)
fe_survey = rma.uni(yi = ate_vote, sei = se_vote, weights = N,
method = "FE", data = survey)
# Normality test
shapiro.test(field$ate_vote)
mean(field$ate_vote)
################################################################################
# Conduct moderator analysis with type of study as moderator
################################################################################
meta$field = with(meta, ifelse(type == "Field" | type == "Natural", 1, 0))
# Remove lab experiments
meta = meta %>%
filter(type == "Field" | type == "Natural" | type == "Survey") %>%
arrange(ate_vote) %>%
mutate(author_reduced = reorder(author_reduced, -ate_vote))
# Fixed effects model without moderators
fe = rma.uni(yi = ate_vote, sei = se_vote, data = meta, method = "FE")
# Random effects model without moderators
re = rma(yi = ate_vote, sei = se_vote, data = meta)
het_all = re$tau2
# Mixed effects model with moderators
me_mod = rma(yi = ate_vote, sei = se_vote, mods = field, data = meta)
het_mod = me_mod$tau2
# Calculate residual heterogeneity
res_het = (het_all - het_mod)/het_all
pred = predict(me_mod, newmods = cbind(seq(from = 0, to = 1, by = 1), 0), addx = TRUE)
################################################################################
# Save information for plotting
################################################################################
save(meta, field, survey, fe, re, me_mod, fe_field, fe_survey, re_field, re_survey,
file = "data/meta_results.RData")
################################################################################
# Libraries and Import
################################################################################
rm(list=ls())
# Libraries
library(tidyverse)
library(metafor)
# Data import
load(file="data/meta_results.RData")
################################################################################
# Plot field results
################################################################################
# Add meta-anlaysis parameters
ate_vote_fe = coef(fe_field)
se_vote_fe = summary(fe_field)$se
ate_vote_re = coef(re_field)
se_vote_re = summary(re_field)$se
meta_fe = data.frame(type="Field", year=NA, author = "Fixed effects model",
author_reduced = "Fixed effects model", country = NA,
ate_vote = ate_vote_fe, se_vote = se_vote_fe, ci_upper = NA,
ci_lower = NA, published = NA, N = NA, Notes = NA)
meta_re = data.frame(type="Field", year=NA, author = "Random effects model",
author_reduced = "Random effects model", country = NA,
ate_vote = ate_vote_re, se_vote = se_vote_re, ci_upper = NA,
ci_lower = NA, published = NA, N = NA, Notes = NA)
field = rbind(field, meta_fe, meta_re)
# Re-order factor levels
field$author_reduced = fct_relevel(field$author_reduced, "Fixed effects model", after = 0)
field$author_reduced = fct_relevel(field$author_reduced, "Random effects model", after = 0)
# Plot field results
ggplot(field, aes(ate_vote, author_reduced)) +
geom_point(color = "seagreen3", size = 1.5) +
geom_point(data = subset(field,
author_reduced == "Fixed effects model" |
author_reduced == "Random effects model"),
size = 1.5, color = "black", fill = "black") +
geom_errorbarh(aes(y = author_reduced,
xmin = ate_vote - 1.96*se_vote,
xmax = ate_vote + 1.96*se_vote),
color="grey30", size=0.5, alpha = 0.5, height = 0.2) +
geom_text(aes(label = country, x = 0.25, y = author_reduced), size = 3) +
geom_vline(xintercept = 0, linetype = "dashed") +
geom_hline(yintercept = 2.5, linetype = "solid") +
xlab("Change in vote share (percentage points)") +
scale_x_continuous(limits = c(-.9, 0.3), breaks=seq(-.9,0.3, .1)) +
theme_classic() +
theme(axis.title.y=element_blank()) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.text=element_text(size = 8)) +
theme(axis.text.x = element_text(size = 8)) +
theme(legend.position = "none")
ggsave("figs/field.pdf", height = 3.5, width = 6)
#ggsave("figs/field_no_banerjee.pdf", height = 3.5, width = 6)
# Plot field results: distribution
ggplot(field, aes(ate_vote)) +
geom_histogram(color = "steelblue2", size = 1, stat = "density") +
theme_classic()
################################################################################
# Plot survey results
################################################################################
# Add meta-anlaysis parameters
ate_vote_fe = coef(fe_survey)
se_vote_fe = summary(fe_survey)$se
ate_vote_re = coef(re_survey)
se_vote_re = summary(re_survey)$se
meta_fe = data.frame(type="Survey", year=NA, author = "Fixed effects model",
author_reduced = "Fixed effects model", country = NA,
ate_vote = ate_vote_fe, se_vote = se_vote_fe, ci_upper = NA,
ci_lower = NA, published = NA, N = NA, Notes = NA)
meta_re = data.frame(type="Survey", year=NA, author = "Random effects model",
author_reduced = "Random effects model", country = NA,
ate_vote = ate_vote_re, se_vote = se_vote_re, ci_upper = NA,
ci_lower = NA, published = NA, N = NA, Notes = NA)
survey = rbind(survey, meta_fe, meta_re)
# Re-order factor levels
survey$author_reduced = fct_relevel(survey$author_reduced, "Fixed effects model", after = 0)
survey$author_reduced = fct_relevel(survey$author_reduced, "Random effects model", after = 0)
# Plot survey results
ggplot(survey, aes(ate_vote, author_reduced)) +
geom_point(color = "steelblue2", size = 1.5) +
geom_point(data = subset(survey,
author_reduced == "Fixed effects model" |
author_reduced == "Random effects model"),
size = 1.5, color = "black", fill = "black") +
geom_errorbarh(aes(y = author_reduced,
xmin = ate_vote - 1.96*se_vote,
xmax = ate_vote + 1.96*se_vote),
color="grey30", size=0.5, alpha = 0.5, height = 0.2) +
geom_vline(xintercept = 0, linetype = "dashed") +
geom_hline(yintercept = 2.5, linetype = "solid") +
geom_text(aes(label = country, x = 0.25, y = author_reduced), size = 3) +
xlab("Change in vote share (percentage points)") +
scale_x_continuous(limits = c(-.9, 0.3), breaks=seq(-.9,0.3, .1)) +
theme_classic() +
theme(axis.title.y=element_blank()) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.text=element_text(size = 8)) +
theme(axis.text.x = element_text(size = 8)) +
theme(legend.position = "none")
ggsave("figs/survey.pdf", height = 4, width = 6)
